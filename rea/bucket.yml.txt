AWSTemplateFormatVersion: '2010-09-09'
Resources:
  MyS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: ust1-s3-account-mapping-gen-ai-embeddings

  MyLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Role: !GetAtt MyLambdaExecutionRole.Arn
      FunctionName: my-lambda-function
      Code:
        S3Bucket: lambda-code-bucket
        S3Key: lambda-code.zip
      Runtime: python3.9

  MyS3BucketEvent:
    Type: AWS::S3::Bucket
    Properties:
      Bucket: !Ref MyS3Bucket
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: pdf_summary/
            Function: !GetAtt MyLambdaFunction.Arn

  MyLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub "arn:aws:s3:::${MyS3Bucket}/*"

Outputs:
  LambdaFunctionArn:
    Value: !GetAtt MyLambdaFunction.Arn
  S3BucketName:
    Value: !Ref MyS3Bucket
